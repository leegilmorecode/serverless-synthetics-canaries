const synthetics = require('Synthetics');
import * as http from 'http';
//const log = require('SyntheticsLogger');
const syntheticsConfiguration = synthetics.getConfiguration();

const apiCanaryBlueprint = async function () {
  syntheticsConfiguration.setConfig({
    restrictedHeaders: [], // Value of these headers will be redacted from logs and reports
    restrictedUrlParameters: [], // Values of these url parameters will be redacted from logs and reports
  });

  // Handle validation for positive scenario
  const validateSuccessful = async function (res: any) {
    return new Promise<void>((resolve) => {
      if (res.statusCode < 200 || res.statusCode > 299) {
        throw res.statusCode + ' ' + res.statusMessage;
      }

      let responseBody = '';
      res.on('data', (d: string) => {
        responseBody += d;
      });

      res.on('end', () => {
        // Add validation on 'responseBody' here if required.
        resolve();
      });
    });
  };

  // Set request option for Verify https://6fy1ep83ei.execute-api.eu-west-1.amazonaws.co
  let requestOptionsStep1: http.RequestOptions = {
    hostname: '6fy1ep83ei.execute-api.eu-west-1.amazonaws.com',
    method: 'GET',
    path: '/develop/actors',
    port: '443',
    protocol: 'https:',
    headers: {},
  };

  if (requestOptionsStep1['headers']) {
    requestOptionsStep1['headers']['User-Agent'] = [
      synthetics.getCanaryUserAgentString(),
      requestOptionsStep1['headers']['User-Agent'],
    ].join(' ');
  }

  // Set step config option for Verify https://6fy1ep83ei.execute-api.eu-west-1.amazonaws.co
  let stepConfig1 = {
    includeRequestHeaders: true,
    includeResponseHeaders: true,
    includeRequestBody: true,
    includeResponseBody: true,
    continueOnHttpStepFailure: true,
  };

  await synthetics.executeHttpStep(
    'Verify https://6fy1ep83ei.execute-api.eu-west-1.amazonaws.co',
    requestOptionsStep1,
    validateSuccessful,
    stepConfig1,
  );

  // Set request option for Verify https://6fy1ep83ei.execute-api.eu-west-1.amazonaws.-2
  let requestOptionsStep2: http.RequestOptions = {
    hostname: '6fy1ep83ei.execute-api.eu-west-1.amazonaws.com',
    method: 'GET',
    path: '/develop/actors/1',
    port: '443',
    protocol: 'https:',
    headers: {},
  };

  if (requestOptionsStep2['headers']) {
    requestOptionsStep2['headers']['User-Agent'] = [
      synthetics.getCanaryUserAgentString(),
      requestOptionsStep2['headers']['User-Agent'],
    ].join(' ');
  }

  // Set step config option for Verify https://6fy1ep83ei.execute-api.eu-west-1.amazonaws.-2
  let stepConfig2 = {
    includeRequestHeaders: true,
    includeResponseHeaders: true,
    includeRequestBody: true,
    includeResponseBody: true,
    continueOnHttpStepFailure: true,
  };

  await synthetics.executeHttpStep(
    'Verify https://6fy1ep83ei.execute-api.eu-west-1.amazonaws.-2',
    requestOptionsStep2,
    validateSuccessful,
    stepConfig2,
  );
};

exports.handler = async () => {
  return await apiCanaryBlueprint();
};
